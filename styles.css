@import url("https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@500&display=swap");
:root {
  --White: hsl(0, 0%, 100%);
  --Light-grayish-violet: hsl(270, 3%, 87%);
  --Dark-grayish-violet: hsl(279, 6%, 55%);
  --Very-dark-violet: hsl(278, 68%, 11%);
  --Input-Error: hsl(0, 100%, 66%);

  /* gradient */
  --Border-Gradient-color: linear-gradient(
    to right hsl(249, 99%, 64%),
    hsl(278, 94%, 30%)
  );
}
.no-spinners::-webkit-outer-spin-button,
.no-spinners::-webkit-inner-spin-button {
  /* Remove default appearance */
  -webkit-appearance: none;
  /* Disable pointer events on pseudo-elements */
  pointer-events: none;
  /* Hide pseudo-elements */
  display: none;
}
* {
  font-family: "Space Grotesk", sans-serif;
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}
body {
  font-size: 18px;
  min-height: 100vh;
}
.main-container {
  display: flex;
  align-items: center;
}
.cards-container {
  min-height: 100vh;
  width: 40%;
  background-image: url("./images/bg-main-desktop.png");
  background-position: center center;
  background-size: cover;
  background-repeat: no-repeat;
  position: relative;
}
.cards {
  position: absolute;
  top: 50%;
  display: flex;
  flex-direction: column;
  gap: 2rem;
  left: 100%;
  transform: translate(-50%, -50%);
}

.front-card {
  position: relative;
  transform: translateX(-100px);
}
.card_logo {
  position: absolute;
  top: 1rem;
  left: 1rem;
}
#number {
  position: absolute;
  color: var(--White);
  bottom: 5rem;
  left: 2rem;
  font-size: 2rem;
  letter-spacing: 2px;
}
.card-info {
  position: absolute;
  bottom: 2rem;
  left: 2rem;
  right: 3rem;
  display: flex;
  color: var(--White);
  justify-content: space-between;
}
.back-card {
  position: relative;
}
#cvc {
  position: absolute;
  bottom: 7.2rem;
  left: 22rem;
  color: var(--Light-grayish-violet);
}
.input-container {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
}
.input-container > form > div {
  margin-bottom: 2rem;
}
/* .card {
  margin: 0 auto;
  width: 400px;
  height: 210px;
  border-radius: 0.4rem;
  color: var(--White);
  box-shadow: 0px 0px 14px 0px rgba(0, 0, 0, 0.3);
} */
label {
  color: var(--Very-dark-violet);
  text-transform: uppercase;
  font-size: 15px;
  margin-bottom: 5px;
}
input[type="text"],
input[type="number"] {
  border: 1px solid black;
  width: inherit;
  padding: 10px;
  border: 1px solid rgba(151, 151, 151, 0.37);
  border-radius: 5px;
}

input::placeholder {
  color: var(--Light-grayish-violet);
  font-size: 15px;
}

input[type="text"]:focus,
input[type="number"]:focus {
  border-color: var(
    --Very-dark-violet
  ); /* set the border color to blue when the input is active */
  outline: none; /* remove the default outline */
}
.card-details {
  display: grid;
  grid-template-columns: 1fr 1fr;
}
.flex-col {
  display: flex;
  flex-direction: column;
}
.card-details > input {
  width: 60px;
}
.expiry-d > div > input {
  max-width: 65px;
}
.grid_3 {
  /* margin-right: 20px; */
  margin-left: 10px;
}
.grid_3 > input {
  max-width: 100%;
}
#MM {
  margin-right: 5px;
}

.confirm-btn,
.thanks-btn {
  width: 100%;
  grid-column: 2 span;
  font-size: 18px;
  height: 50px;
  color: var(--White);
  border-radius: 6px;
  background: var(--Very-dark-violet);
  cursor: pointer;
  transition: all 0.6s;
}
.confirm-btn:hover,
.thanks-btn:hover {
  cursor: pointer;
  background-color: rgb(83, 52, 223);
}
.cvc-card {
  position: absolute;
  /* top: 94px; */
  /* left: 315px; */
  margin-top: 93px;
  margin-left: 313px;
}
.num-card {
  position: absolute;
  margin-top: 60px;
  margin-left: 40px;
  height: 1rem;
  font-size: 1.7rem;
}
.name-card {
  position: absolute;
  margin-top: 172px;
  font-size: 0.8rem;
  margin-left: -54px;
}
.front-card-date {
  position: absolute;
  margin-top: 115px;
  margin-left: 309px;
}

.thanks-container {
  width: 370px;
  text-align: center;
  gap: 2rem;
}
.thanks-container > img {
  margin-bottom: 0.8rem;
}
.thanks-container > p {
  color: var(--Light-grayish-violet);
  margin: 0.8rem 0;
}
.error {
  border: 2px solid var(--Input-Error) !important;
}
.error_message {
  gap: 0;
}
.error_message::after {
  content: "Invalid input";
  color: var(--Input-Error);
  margin-top: 0.2rem;
}
.hide {
  display: none !important;
}
